#############################################################################
## ct means core testing.
## In part for testing the core; in part the core testing framework.
##
## It is not particularly intended as a general testing framework
## though it could possibly serve as such. It is intended as a minimal
## framework from which to bootstrap a richer testing framework. It is
## is difficult to test a system without a testing framework. It is thus
## difficult to test a testing framework without a testing framework.
## And so the need for this minimalist testing framework for which there
## is no automatic testing. 
##
## It seems to produce the correct results with some small test cases
## though (verified by use). So don't be quick to modify this.
##
##
#############################################################################

function ct.init {
##	This should be invoked before running any tests.
##	It presets variables, prepares a log file, and logs the
##	beginning of a test run
	export FAILED=0
	export TESTED=0
	export LOG=./log
	echo -e >> ${LOG} "${SEP0} \ntestrun $(date) \n${SEP0} \n"
}

function ct.exit {
##	This shold be invoked at the end of a testrun. It will 
##	display the results of the testrun and cause the calling
##	shell to exit with a zero status if all tests passed and 
##	with a non-zero status if there were failures.
##
##	BUG: XXX The exit status may be zero if there are 255 failures
##	because it exits with the number of failures
##
	echo -e >>${LOG} "Ran ${TESTED} core tests with ${FAILED} failures\n\n"
	echo -e "\nRan $TESTED core tests with $FAILED failures"
	echo Details written to ${LOG}
	exit ${FAILED}
}

function ct.pass   { 
##	Invoke this to exercise a piece of code that should pass
	ct._run $* ; 
}

function ct.fail   { 
##	Invoke this to exercise a piece of code that should pass
	ct._run -f $* ; 
}
###########################################################################################

export SEP0="############################################################################"
export SEP1="============================================================================"
export B="\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"
export BACK=${B}${B}${B}${B}${B}${B}

function ct._log-begin { echo -e >> ${LOG} "${SEP1} \n[TEST #${TESTED}] [Expect ${Expect}] [$*] \n${SEP1}" ; }
function ct._log-end   { echo -e >> ${LOG} "${SEP1}\n[$(tput sgr 0 1)$1$(tput sgr0)]\n\n" ; }
function ct._tty-begin { echo -n "[----] test#${TESTED} : expect ${Expect} : $*"  ; }
function ct._tty-end   { echo -e "${BACK}[$(tput sgr 0 1)$1$(tput sgr0)]" ; }

function ct._run {


	export TESTED=$(( ${TESTED} + 1 ))
	[ "$1" == "-f" ] && shift && export Expect=fail || export Expect=pass

	ct._log-begin $*
	ct._tty-begin $*

	$* >> ${LOG} && export Result=pass || export Result=fail
	if [ X$Result == X$Expect ]; then
		ct._tty-end pass
		ct._log-end pass
	else
		ct._tty-end fail
		ct._log-end fail
		export FAILED=$(( ${FAILED} + 1 ))
	fi
}	


